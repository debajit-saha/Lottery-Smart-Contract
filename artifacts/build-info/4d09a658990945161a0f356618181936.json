{
	"id": "4d09a658990945161a0f356618181936",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Lottery.sol": {
				"content": "pragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract Lottery {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Lottery.sol": {
				"Lottery": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Lottery.sol\":35:62  contract Lottery {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Lottery.sol\":35:62  contract Lottery {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220621dd93b24ba94985a688c401177df55ed8cf84cf05fa867a80a2391fadbc65e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220621dd93b24ba94985a688c401177df55ed8cf84cf05fa867a80a2391fadbc65e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x1DD93B 0x24 0xBA SWAP5 SWAP9 GAS PUSH9 0x8C401177DF55ED8CF8 0x4C CREATE 0x5F 0xA8 PUSH8 0xA80A2391FADBC65E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220621dd93b24ba94985a688c401177df55ed8cf84cf05fa867a80a2391fadbc65e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x1DD93B 0x24 0xBA SWAP5 SWAP9 GAS PUSH9 0x8C401177DF55ED8CF8 0x4C CREATE 0x5F 0xA8 PUSH8 0xA80A2391FADBC65E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220621dd93b24ba94985a688c401177df55ed8cf84cf05fa867a80a2391fadbc65e64736f6c63430008070033",
									".code": [
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 62,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Lottery.sol\":{\"keccak256\":\"0xfb531dddfdc60df642ba66f376c07bee92bc4f2837c71083cfc9d5c89e3d19de\",\"urls\":[\"bzz-raw://b0c3bb2d02d81e784352ea81e1613c96f4a573f96c3b4603151ff44b36d59c70\",\"dweb:/ipfs/QmeioqS2jSozud5Y5MVxaJ3p11PtTmxk7AstjaSCBWYx1H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Lottery.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Lottery.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Lottery.sol": {
				"ast": {
					"absolutePath": "Lottery.sol",
					"exportedSymbols": {
						"Lottery": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Lottery",
							"nameLocation": "44:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:27:0",
							"usedErrors": []
						}
					],
					"src": "0:62:0"
				},
				"id": 0
			}
		}
	}
}